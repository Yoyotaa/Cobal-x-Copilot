version: '3.8'

services:
  accounting-app:
    build: .
    container_name: python-accounting-app
    restart: unless-stopped
    environment:
      - PYTHONPATH=/app
      - DATA_FILE=/app/data/account_balance.json
      - LOG_LEVEL=INFO
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    networks:
      - accounting-network
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "python", "-c", "import operations; print('Health OK')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:14-alpine
    container_name: accounting-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: accounting
      POSTGRES_USER: ${DB_USER:-accounting_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - accounting-network

  redis:
    image: redis:7-alpine
    container_name: accounting-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - accounting-network

  nginx:
    image: nginx:alpine
    container_name: accounting-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - accounting-app
    networks:
      - accounting-network

volumes:
  postgres_data:
  redis_data:

networks:
  accounting-network:
    driver: bridge
